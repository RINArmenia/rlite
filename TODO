Open tasks, in decreasing order of priority:

* add QosMapper uipcp component; this defines how to map rina_flow_spec
  to flow configuration, qos_id and scheduler; implement a 'fixprio'
  policy, so that on component creation the pfifo scheduler with two
  (?) classes is installed, and on flow allocation the max_delay parameter
  is used to map a flow allocation request to a qos_id; the FlowAllocator
  component will invoke the QosMapper in the fa_req() method

* implement dynamic DIF Allocator to keep the mapping between
  application names and DIFs; the DIF allocator should be an
  application embedded in the uipcps main loop; it should
  register only within the DIFs where it has been configured to
  do so

* implement a distributed and fault-tolerant DFT by means of a
  Kademlia DHT

* generic code for RIB synchronization where needed (e.g. DFT, LFDB,
  neighbors, address allocation table)
   * a smart implementation would use some kind of hash on the RIB
     subtrees to understand when the neighbor has different (and newer)
     version of a fully-replicated subtree (e.g. DFT or Lower Flow
     database (LFDB))
   * avoid exchanging the same data again and again when not needed,
     just periodically exchange hashes (and do the full update only when
     needed)

* implement support for tailroom (needed by shim-eth)

* extend demonstrator to support multiple physical machines

* DTCP: RTT estimate should happen using ktime_t variables

* install: don't overwrite config files

* implement utility to graphically show dif-rib-show, using graphviz
  (DIF map with active links)
