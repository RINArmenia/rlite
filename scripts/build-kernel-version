#!/bin/bash -eu

set -o pipefail

readonly KERNEL_VERSION=${1:?}
readonly ARCH=${2:?}
readonly GCC_MAJOR_VERSION=$(echo '#include <stdio.h>
void main() { printf("%u\n", __GNUC__); }' | gcc -x c - -o /tmp/getgccversion  && /tmp/getgccversion)
readonly PROC_COUNT=$(grep -c '^processor' /proc/cpuinfo)

# Fetch the kernel code
test -d linux-${KERNEL_VERSION} || wget https://www.kernel.org/pub/linux/kernel/v${KERNEL_VERSION:0:1}.x/linux-${KERNEL_VERSION}.tar.gz
tar xzf linux-${KERNEL_VERSION}.tar.gz

# Configure kernel
pushd linux-${KERNEL_VERSION}
compiler_file=compiler-gcc${GCC_MAJOR_VERSION}.h
if [ ! -f include/linux/${compiler_file} -a ! -h include/linux/${compiler_file} ]
then
  # Fix compilation of old kernels with recent GCC
  pushd include/linux
  if [ -f compiler-gcc5.h -a $GCC_MAJOR_VERSION -gt 5 ]
  then
    ln -sv compiler-gcc5.h ${compiler_file}
  else
    ln -sv compiler-gcc4.h ${compiler_file}
  fi
  popd
fi
make mrproper
make -j $PROC_COUNT ARCH=${ARCH} defconfig
make -j $PROC_COUNT ARCH=${ARCH} modules_prepare
popd

# First build in-tree-only drivers
./configure --kernbuilddir $PWD/linux-${KERNEL_VERSION} --no-user
make -j $PROC_COUNT ker
